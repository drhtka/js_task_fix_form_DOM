{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","input","label","createElement","className","htmlFor","id","startName","name","toUpperCase","inputName","i","length","innerHTML","before","setAttribute"],"mappings":";AAAA,aA0BC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxBD,IAwBC,EAxBKA,EAAaC,EAAAA,SAASC,iBAAiB,UAEzBF,EAAAA,EAAAA,GAsBnB,IAtB2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBG,IAAAA,EAAiB,EAAA,MACpBC,EAAQH,SAASI,cAAc,SAErCD,EAAME,UAAY,cAClBF,EAAMG,QAAUJ,EAAMK,GAKjB,IAHDC,IAAAA,EAAYN,EAAMO,KAAK,GAAGC,cACxBC,EAAYT,EAAMO,KAEfG,EAAI,EAAGA,EAAID,EAAUE,OAAQD,IAChCD,EAAUC,KAAOD,EAAUC,GAAGF,gBAChCF,GAAa,KAGfA,GAAaG,EAAUC,GAGzBT,EAAMW,UAAYN,EAElBN,EAAMa,OAAOZ,GAEbD,EAAMc,aAAa,cAAkBR,GAAAA,OAAAA,KACtC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.3e34cfbc.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = [...document.querySelectorAll('input')];\n\nfor (const input of inputs) {\n  const label = document.createElement('label');\n\n  label.className = 'field-label';\n  label.htmlFor = input.id;\n\n  let startName = input.name[0].toUpperCase();\n  const inputName = input.name;\n\n  for (let i = 1; i < inputName.length; i++) {\n    if (inputName[i] === inputName[i].toUpperCase()) {\n      startName += ' ';\n    }\n\n    startName += inputName[i];\n  }\n\n  label.innerHTML = startName;\n\n  input.before(label);\n\n  input.setAttribute('placeholder', `${startName}`);\n}\n"]}